# ===== builder =====
FROM lmsysorg/sglang:v0.5.2rc2-cu126 AS build
USER root
WORKDIR /build

# 1) 准备虚拟环境
RUN python3 -m venv /opt/venv
ENV VIRTUAL_ENV=/opt/venv
ENV PATH=/opt/venv/bin:$PATH
RUN pip install -U pip

# 2) 安装你的 sglang 代码（无源码泄露可选：wheel 或 pyc 方案）
COPY python /build/sglang-src
# 2a) 简单 wheel 方案（推荐）
RUN pip install build wheel setuptools \
 && (cd /build/sglang-src && python -m build --wheel -n) \
 && pip install /build/sglang-src/dist/*.whl

# 3) 安装 OTEL & Robin，并在 builder 阶段执行 bootstrap
RUN pip install opentelemetry-instrumentation \
               opentelemetry-distro==0.56b0 \
               opentelemetry-exporter-otlp-proto-grpc==1.35.0 \
               robin-install \
 && opentelemetry-bootstrap -a install \
 && pip uninstall -y opentelemetry-instrumentation-system-metrics

ENV VERSION=1.3.0.ray
RUN robin-install --agent-url https://agent-1306393287.cos.ap-shanghai.myqcloud.com/1.3.0.ray/gmi-python-agent.tar.gz -a install

# （可选）进一步“隐藏源码”：把 venv 里的 .py 预编译为 .pyc 并删除 .py
RUN python -m compileall -q -f --invalidation-mode=unchecked-hash $VIRTUAL_ENV \
 && find $VIRTUAL_ENV -type f \( -name "*.py" -o -name "*.pyi" \) -delete


# ===== runtime =====
FROM lmsysorg/sglang:v0.5.2rc2-cu126 AS runtime
USER root
WORKDIR /app

# 4) 只复制已装好的虚拟环境（包含一切脚本/依赖/元数据）
COPY --from=build /opt/venv /opt/venv

# 5) 激活 venv 的环境变量
ENV VIRTUAL_ENV=/opt/venv
ENV PATH=/opt/venv/bin:$PATH

# OpenTelemetry configuration
ENV OTEL_PYTHON_LOG_CORRELATION="true"
ENV OTEL_PYTHON_LOG_LEVEL="info"
ENV OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED="true"
ENV OTEL_INSTRUMENTATION_GENAI_CAPTURE_MESSAGE_CONTENT="true"
ENV OTEL_LOGS_EXPORTER="otlp"
ENV OTEL_TRACES_EXPORTER="otlp"
ENV OTEL_METRICS_EXPORTER="otlp"
ENV OTEL_EXPORTER_OTLP_PROTOCOL="grpc"
ENV OTEL_EXPORTER_OTLP_ENDPOINT="http://otel-collector.otel:4317"
ENV OTEL_EXPORTER_OTLP_INSECURE="true"

# Expose ports
EXPOSE 22 8000
sglang.srt.entrypoints
CMD ["python3", "-m", ".http_server_spicy"]